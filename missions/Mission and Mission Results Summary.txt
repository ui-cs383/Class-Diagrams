Mission and Mission Results Summary
As the Missions and Actions are both decks of cards, the first thing we need to understand is Deck. Deck is class that contains the attributes deckName (for the name of the deck), deckMax(the maximum number of cards in the deck), deckNumberDrawn (the number of cards drawn from the deck), deckCardsDrawn (an Ordered Dictionary which holds every card of the deck that has been drawn), and phasingPlayerSide (Which simply stores who is in control, currently).
The operations for the Deck class are draw (to draw a card), shuffle (to randomize the deck at the start of the game and once all cards are drawn) and getSide (to know which side the phasing player is on).
Deck depends on information stored in the Player Class, and has three classes that are aggregates of it: Missions (for the Missions deck), Action (for the Actions deck), and Character (for the Character Deck).
The Player class contains two attributes, playerSide (which side the phasing player is on) and resourceTrack (the number of Force Points that the phasing player has built up).
The operations for the Player class are removeResources (to remove Force Points from a Player's Resource Track) and addResources (to add resources to a player's resource track).
The Player class is dependent on no other classes.
The Mission class contains three attributes, missionName (which contains the name of the mission in question) and the missionType (a character that signifies what type of mission). 
The operations for the Mission class are getType (which gets the missionType), assignMission (which assigns the mission to a character or characters) and checkRestriction (which checks to see if the mission is restricted to the rebels or the imperials).
The Mission class is dependent on the Character class.
The Character class has 11 attributes. These attributes are the characterName (storing the name of the character), and detectionStatus (a boolean variable. True means detected, False means not detected). The other 9 variables are all stats imported directly from the characters cards in the game, and the names have remained the same.
The operations for the Character class are changeStatus (to change the value of detectionStatus) and removeCharacter (to remove a character from play).
The character class is dependent on no other classes.
The Action class contains two attributes, missionType (a character that signifies what type of mission) and missionSuccess (a boolean to signify whether or not the Action resulted in a successful mission).
The operations for the Action class are getEnvironSize (to get the size of the Environ), getMissionType (to get the type of the Mission), checkActionLetter (to check the action letters on the card against the mission type) and getCharacterAttribute (to get a needed character(s) attribute(s)).
The Action class is dependent on the Mission, Character, and Environ classes.
The Environ class contains four attributes, resourceValue (containing the number for resources in the Environ), units (this list contains lists of all units in an Environ), capturedUnits (this list contains lists of all units captured in an Environ) and rebelCamp (a boolean that signifies whether a rebel camp is in the Environ).
The operations for Environ are removeUnit (to remove a unit from the Environ), removeCapturedUnit (to remove a captured unit from the Environ), addUnit (to add a unit to the Environ), addCapturedUnit (to add a captured unit to the Environ) and changeCamp (this changes the boolean variable rebelCamp).
The Environ class is dependent on no other classes.
The Mission Results class has five attributes, totalBonus (the total number of bonus draws a player gets), result (the result of the mission. True means success, false means failure), resultFormula (this dictionary stores the possible formulas, depending on the mission being completed), missionType (the type of Mission being completed), and phasingPlayerSide (which side the current player is on).
The operations for Mission Results are calculateBonus (to calculate the bonus draws), getSide (get which side the phasing player is on), checkRestriction (check and see if the results are restricted to a side), getSuccess (see if the mission was a success), bonusDraws (draw a number of cards based on the total bonus), and processResult (depending on the bonus draws and mission result, this can change quite a few things).
Mission Results are dependent on Mission, Player, Character, Action, Environ and the Planet classes.
The Planet class has three attributes, coupRating, currentLoyalty (this is the current Loyalty for the phasing player) and loyaltyMarker (this is set to side the player is loyal to).
The operations for the Planet class are changeLoyalty (to change the loyalty of the given planet) and flipMarker (to switch the loyalty marker from side to side).
The Planet class is dependent on no other classes.

